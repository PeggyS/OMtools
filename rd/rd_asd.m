% rd_asd.m:    called by RD to handle .ASD data files% written by:  Jonathan Jacobs%              March 1997 - October 1999 (last mod: 10/14/99)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%getbias% open the asd fileif comp(1) == 'M'   fid = fopen( [pathname filename], 'r', 'l'); else   fid = fopen( [pathname filename], 'r' );end% x_files = x_files + 1;% total_files = r_files + a_files + b_files...%                    + o_files + x_files + l_files;fseek(fid, 0, 'bof');chan_count = fread(fid, 1, 'ushort');fseek(fid, 2, 'bof');commOffset = fread(fid, 1, 'ushort');% get the comments.  They are ASCII strings located at % <commOffset> and seem to be 64 characters longcommStrLen = 64;comments = char(chan_count,commStrLen);chanName = char(chan_count,2);for i = 1:chan_count   offset = commOffset+((i-1)*commStrLen);   fseek(fid, offset, 'bof');   [temp, ~] = fread(fid, commStrLen, 'uchar');   comments(i,:) = char(temp)';   % take a stab at guessing what channel data is for   isRght=strfind(lower(comments(i,:)), 'right');   isLeft=strfind(lower(comments(i,:)), 'left');   isStim=strfind(lower(comments(i,:)), 'stim');   if (isRght)      chanName(i,1) = 'r';    elseif (isLeft)      chanName(i,1) = 'l';    elseif (isStim)      chanName(i,1) = 's';    else      chanName(i,1) = 'x';   end   isVert=strfind(lower(comments(i,:)), 'vert');   isHor =strfind(lower(comments(i,:)), 'horiz');   if (isVert)      chanName(i,2) = 'v';    elseif (isHor)      chanName(i,2) = 'h';    elseif (isStim)      chanName(i,2) = 't';    else      chanName(i,2) = num2str(i);   endend% read in the datadatastart = commOffset+(commStrLen*chan_count);fseek(fid, datastart, 'bof');[tempdata, numsamps] = fread(fid,inf,'float32');dat_len = fix(numsamps/chan_count);fclose(fid);newdata = NaN(dat_len,chan_count);for i = 1:chan_count   newdata(:,i) = tempdata( (i-1)*dat_len+1: dat_len*i);endcommentstr = comments(end,:);commentstr = nameclean(commentstr);disp(['  Comments: ' commentstr] )[dat_len, dat_cols] = size( newdata );disp( ['  Channels found:     ' num2str(dat_cols)] );disp( ['  Samples found:      ' num2str(dat_len)] );clear fid i commStrLen chan_count datlen temp countclear tempdata numsamps commOffset% return to RD