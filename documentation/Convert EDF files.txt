Steps to extract data from EDF files.All specifics are for the example file "ben0400.edf"1. Open a DOS window and Run edf2asc on the file(s) you wish to convert.For example, "edf2asc ben0400.edf -s -miss NaN" will extract only the raw data, and will replace missed samples with "NaN" (the IEEE value for "Not a Number") These "empty samples" occured at the times when the EyeLink camera/software was unable to properly determine the eye's position. Instead of writing a number to file (e.g. 343.8) EyeLink wrote a period, which MATLAB can't handle. Fortunately edf2asc makes the substitution of NaN for these empty samples easy.2. The resulting file will be named "ben0400.asc" and will have seven columns, separated by tabs.  You will be interested in columns 2,3,5 and 6, which are the LH, LV, RH and RV data, respectively. [Technical detail -- skip if not interested -- This example file contains 4 "blocks" or separate data-taking sessions.  They are separated by a row of periods, spaces and tabs ("space space space NaN tab" repeated 6 times, followed by "space space space NaN return").  If you have a good text editor you can examine these so-called "invisible characters."]3. Run the program "edf2bin" to create a set of files that contain only the four channels that we really want (cols 2,3,5,6), in the appropriate order. These files will be saved in the same place as the original, numbered in the order they appeared in the '.asc' file, with extensions of ".bin".  In this example there will be four files: "ben0400_1.bin" through "ben0400_4.bin".(Note: If you wish, you can run "edf2lab", which will create ASCII files, instead of binary files.  These will be MUCH larger, and take longer to read in.  Additionally, you will have to enter some different answers in "biasgen", below.)4. For the OMtools software to be able to read in this data, there needs to be a file named "adjbias.txt" that contains the calibration information for the data.  This can be done very easily by running the OMtools program "biasgen".  This is an example of its use:	Èbiasgen	Enter the subject's initials: ben0400_	Enter the subject's name: Joe Cool	Enter any comments: I have nothing to say at this time	Enter the number of records: 4	(R)obinson coil, (C)ollewijn coil or (I)R? i	(L)abVIEW, (R)TRV, (O)ber, (A)SCII or (B)inary? b	(N)ormal or (E)xtended calibration? n	Enter the sampling frequency: 250         (assuming data was take at 250 Hz)   (I)nterleaved or (C)ontiguous? c	Enter the number of channels: 4	Assuming channels: lh rh lv rv	Is this correct (y/n)? y	Adjust bias file written to EyeMac II:MATLAB:MATLAB 5.2.1:	È5. The adjust bias file you just created will look like this:	% automagically generated by "biasgen"	% on Thu, Jul 13, 2000 at 17:04:42	% Joe Cool	% I have nothing to say at this time	ben0400_1.txt  4  IR  RAWBIN 250   Contiguous	lh    0  1  1	rh    0  1  1	lv    0  1  1	rv    0  1  1	ben0400_2.txt  4  IR  RAWBIN 250   Contiguous	lh    0  1  1	rh    0  1  1	lv    0  1  1	rv    0  1  1	ben0400_3.txt  4  IR  RAWBIN 250   Contiguous	lh    0  1  1	rh    0  1  1	lv    0  1  1	rv    0  1  1	ben0400_4.txt  4  IR  RAWBIN 250   Contiguous	lh    0  1  1	rh    0  1  1	lv    0  1  1	rv    0  1  16. Make sure that the bias file is in the same folder as the data files, and that the names in the bias file agree with the names of the data files.  If this is all correct, then you are ready to read the data in using "RD" (the "read data" program).*** NOTE: The following steps are the best way to guarantee the accuracy of*** the calibration of the data.  It is possible to avoid this work, however,*** if you believe that the calibration of the EyeLink system is accurate.*** To make use of its calibration factors, open the original ".edf" file using*** the SMI utility "edfview."  On the left side of the screen there will be*** two values for "pixels/deg" -- one for the left eye and one for the right.*** Take the reciprocal of these numbers and substitute them into the biasgen *** file that you just created, replacing the pairs of "1"s with these values.*** e.g L: 30 pixels/deg, R: 25 pixels/deg --> 0.0333 and 0.0400, respectively.*** Then modify the biasgen entries:***   lh    0  0.0333  0.0333***   rh    0  0.0400  0.0400***   lv    0  0.0333  0.0333***   rv    0  0.0400  0.0400****** Once you make these changes and save the file, you can use "RD" to*** read the (assumedly) data into MATLAB.7. Verify that you can now read in the data, prior to calibration.Clear MATLAB's memory by typing "clear all".  Type "RD" to open a file selection dialog box.  Navigate to one of the data files (e.g. ben0400_1.bin) and select it.  Your screen should look like this:	Èclear all	Èrd	 	Loading ben0400_1.bin	  Channels found: 4	  Samples found: 30062	Loading adjustments...	  Channel: lh     Offset: 0                   	    Rightward scale value: 1	    Leftward scale value: 1	  Channel: lv     Offset: 0                   	    Rightward scale value: 1	    Leftward scale value: 1	  Channel: rh     Offset: 0                   	    Rightward scale value: 1	    Leftward scale value: 1	  Channel: rv     Offset: 0                   	    Rightward scale value: 1	    Leftward scale value: 1	  Sampling frequency: 250	  Duration of record: 120.248	***Data is not in degrees. Do you want to rescale? n	***Data is not in degrees. Do you want to rescale? n	***Data is not in degrees. Do you want to rescale? n	***Data is not in degrees. Do you want to rescale? n	 Adding new data to array: lh	 Adding new data to array: lv	 Adding new data to array: rh	 Adding new data to array: rv	Reading BEN0400_1.U	  <<I can not find the file: BEN0400_1.U>>	  <<It must be in the same directory as ben0400_1.bin>>	Reading BEN0400_1.S	  <<I can not find the saccade points file: BEN0400_1.S>>	  <<It must be in the same directory as ben0400_1.bin>>	  <<I will fill the control points with NaNs>>	Reading BEN0400_1.Z	  <<I can not find the file: BEN0400_1.Z>>	  <<It must be in the same directory as ben0400_1.bin>>	Reading BEN0400_1.F	  <<I can not find the file: BEN0400_1.F>>	  <<It must be in the same directory as ben0400_1.bin>>   Loading digital stimuli data.     <<No digital stimuli data file found>>	    È8. Don't worry about the "Can not find..." messages; they simply mean that you have not specified post-processing actions (unfolding data, re-zeroing segments of data, applying filters) to be perfomed as the data is read in.  If you wish to learn about these actions, look for the file "post-processor formats" which has templates of the .s, .z, .u and .f files.The message "***Data is not in degrees. Do you want to rescale?" is because this data is still uncalibrated and therefore very large.  There is no way for me to tell you a priori what the scaling factors should be in the "adjbias.txt" file.  And there is no way for me to tell what these values should be for this particular file, since there was no calibration run made.  Typically our first three records are 1) monocular calibration of the RE, where the subject looks at targets at known angles, e.g. 0, +/- 15 degrees; 2) monocular calibration of the LE as done in the first trial; and 3) binocular calibration as in the previous two files.9.  Had the data been taken in this manner, it would be a simple matter to determine the values to be used in the "adjbias.txt" file.  (When the file is initialized, it has "0 1 1" for each channel's entry.  This means "no offset, positive values are scaled by one, and negative values are scaled by one.")You are now ready to calibrate the data by using the "cal" routine. It is a graphical interface, combined with the command window, that guides you through the steps necessary to determine the offset and scaling values.  This program is easy to use, as long as you pay attention to what it is telling you to do.  Details are in the file "Cal Instructions" that should be in the same directory as this file.