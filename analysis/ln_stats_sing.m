% ln_stats_sing.m: plot the results from the single-spat-freq experiments.  % this code is rather special-case.  would eventually like to rewrite it to%  1) read and parse the actual results file(s)%  2) select the stats to print% Written by:  Jonathan Jacobs%              April 2004 (last mod 04/22/04)% read from a file named "xxxx_singfreq.txt"  These files are created by catenating% and heavily formatting the individual "results" files into one that contains only% numbers and comments (i.e. can be read by matlab "load" command).[fn, pn]=uigetfile('*.txt', 'Select a file to load');if fn   eval(['cd ' '''' pn ''''])   temp = load( fn ); else   disp('Aborted.')   returnendclear fn pn[r,c]=size(temp);% #rows should be divisible by 7.  There are 2 columnsnumrecs = fix(r/7);if numrecs ~= r/7   disp(['incorrect number of rows: ' num2str(numrecs) ])   return else   disp(['Found ' num2str(numrecs) ' records'])endfor i=1:numrecs   file(i)          = temp((i-1)*7 + 1, 1);   seg(i)           = temp((i-1)*7 + 1, 2);   numfastph(i)     = temp((i-1)*7 + 2, 1);   spatfreq(i)      = temp((i-1)*7 + 2, 2);   instfreq_m(i)    = temp((i-1)*7 + 3, 1);   instfreq_std(i)  = temp((i-1)*7 + 3, 2);   FP_pv_m(i)       = temp((i-1)*7 + 4, 1);   FP_pv_std(i)     = temp((i-1)*7 + 4, 2);   SP_avgvel_m(i)   = temp((i-1)*7 + 5, 1);   SP_avgvel_std(i) = temp((i-1)*7 + 5, 2);   SP_veli_m(i)     = temp((i-1)*7 + 6, 1);   SP_veli_std(i)   = temp((i-1)*7 + 6, 2);   SP_velf_m(i)     = temp((i-1)*7 + 7, 1);   SP_velf_std(i)   = temp((i-1)*7 + 7, 2);end% each spatial freq has its own style (8 sf, 16 entries: 8LE, 8RE)% 0.125, 0.25, 0.5 1.0, 2.0, 4.0, 8.0, 16.0style{1} = 'c-s'; style{2} = 'm-s'; style{3} = 'g-s'; style{4} = 'r-s';style{5} = 'c-o'; style{6} = 'm-o'; style{7} = 'g-o'; style{8} = 'r-o';%style{9} = 'c-s'; style{10} = 'm-s'; style{11} = 'g-s'; style{12} = 'r-s';%style{13} = 'c-o'; style{14} = 'm-o'; style{15} = 'g-o'; style{16} = 'r-o';eStr{1} = 'RE -- '; eStr{2} = 'LE -- ';xtl=['   ';' 1 ';'   ';' 2 ';'   ';' 3 ';'   ';' 4 ';'   ';' 5 '];for k = 1:2 % RE, then LE    %%subplot(2,2,4); subplot(2,2,3); subplot(2,2,2); subplot(2,2,1)		numFPF = figure; xlabel('Stimulus'); ylabel([eStr{k} 'Number of Fast Phases/15 sec'])	orient landscape; box; hold on; set(gca,'XTickLabel',xtl)    FPpvF = figure; xlabel('Stimulus'); ylabel([eStr{k} 'Fast Phase Peak Vel. (¡/s)'])	orient landscape; box; hold on; set(gca,'XTickLabel',xtl)	instfreqF = figure; xlabel('Stimulus'); ylabel([eStr{k} 'Avg. Instantaneous Freq. (Hz)'])	orient landscape; box; hold on; set(gca,'XTickLabel',xtl)	SPveliF = figure; xlabel('Stimulus'); ylabel([eStr{k} 'Initial Slow Phase Vel. (¡/s)'])	orient landscape; box; hold on; set(gca,'XTickLabel',xtl)		num_spat_freqs = numrecs/10;    %%% '10' because 5 stim patterns * 2 eyes	%width=(1/num_spat_freqs)*0.5;		for i=(1:num_spat_freqs)	   	   % plot each entry at a slight x-offset for clarity	   % spread of the entries will fill half the space between x_n and x_n+1	   offset = (((num_spat_freqs-i)/num_spat_freqs)*0.5)-0.25;	   i2     = i + ((k-1)*num_spat_freqs);	   j      = ((i2-1)*5)+1:((i2-1)*5)+5;		   figure(numFPF)	   errorbar([1:5]-offset, numfastph(j), [0 0 0 0 0], style{i} );		   figure(FPpvF)	   errorbar([1:5]-offset, FP_pv_m(j), FP_pv_std(j), style{i} );	   %bar([1:5]-offset,FP_pv_m(j),FP_pv_std(j),width);%,style{i} );		   figure(instfreqF)	   errorbar([1:5]-offset, instfreq_m(j), instfreq_std(j), style{i} );		   figure(SPveliF)	   errorbar([1:5]-offset, SP_veli_m(j), SP_veli_std(j), style{i} );	endend