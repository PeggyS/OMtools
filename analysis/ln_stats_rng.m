% ln_stats_rng.m: quick-and-dirty printing of results from 'rangefinder' experiment.% this is rather specialized code.  would like to rewrite more general form to:%  1) read and parse the human-readable results file%  2) allow user to select which stats to display% Written by:  Jonathan Jacobs%              April 2004 (last mod 04/22/04)% read from a file named "xxxx_range.txt"  These files are created by catenating% and heavily formatting the individual "results" files into one that contains only% numbers and comments (i.e. can be read by matlab "load" command).[fn, pn]=uigetfile('*.txt', 'Select a file to load');if fn   eval(['cd ' '''' pn ''''])   temp = load( fn ); else   disp('Aborted.')   returnendclear fn pn[r,c]=size(temp);% #rows should be divisible by 7.  There are 2 columnsnumrecs = fix(r/7);if numrecs ~= r/7   disp(['incorrect number of rows: ' num2str(numrecs) ])   return else   disp(['Found ' num2str(numrecs) ' records'])endfor i=1:numrecs   file(i)          = temp((i-1)*7 + 1, 1);   seg(i)           = temp((i-1)*7 + 1, 2);   numfastph(i)     = temp((i-1)*7 + 2, 1);   spatfreq(i)      = temp((i-1)*7 + 2, 2);   instfreq_m(i)    = temp((i-1)*7 + 3, 1);   instfreq_std(i)  = temp((i-1)*7 + 3, 2);   FP_pv_m(i)       = temp((i-1)*7 + 4, 1);   FP_pv_std(i)     = temp((i-1)*7 + 4, 2);   SP_avgvel_m(i)   = temp((i-1)*7 + 5, 1);   SP_avgvel_std(i) = temp((i-1)*7 + 5, 2);   SP_veli_m(i)     = temp((i-1)*7 + 6, 1);   SP_veli_std(i)   = temp((i-1)*7 + 6, 2);   SP_velf_m(i)     = temp((i-1)*7 + 7, 1);   SP_velf_std(i)   = temp((i-1)*7 + 7, 2);end% each spatial freq has its own style (8 sf, 16 entries: 8LE, 8RE)% 0.125, 0.25, 0.5 1.0, 2.0, 4.0, 8.0, 16.0style{1} = 'c-s'; style{2} = 'm-s'; style{3} = 'g-s'; style{4} = 'r-s';style{5} = 'c-o'; style{6} = 'm-o'; style{7} = 'g-o'; style{8} = 'r-o';eStr{1} = 'RE -- '; eStr{2} = 'LE -- ';num_spat_freqs = numrecs/2;    %%% 2 eyesfor k = 1:2 % RE, then LE   %%subplot(2,2,4); subplot(2,2,3); subplot(2,2,2); subplot(2,2,1)	   numFPF = figure; xlabel('log_2(Spatial Frequency) (cyc/deg)');   ylabel([eStr{k} 'Number of Fast Phases/15 sec '])   orient landscape; box; hold on;   FPpvF = figure; xlabel('log_2(Spatial Frequency) (cyc/deg)');   ylabel([eStr{k} 'Fast Phase Peak Vel. (¡/s)'])   orient landscape; box; hold on;   instfreqF = figure; xlabel('log_2(Spatial Frequency) (cyc/deg)');   ylabel([eStr{k} 'Avg. Instantaneous Freq. (Hz)'])   orient landscape; box; hold on;   SPveliF = figure; xlabel('log_2(Spatial Frequency) (cyc/deg)');   ylabel([eStr{k} 'Initial Slow Phase Vel. (¡/s)'])   orient landscape; box; hold on;	   % for RE, j=1:9, for LE, j=10:18	   j = ((k-1)*num_spat_freqs)+1:((k-1)*num_spat_freqs)+num_spat_freqs;   xax = log2(spatfreq(j));   %xax = [-4 log2(spatfreq(j(2:end)))];      figure(numFPF)   errorbar(xax, numfastph(j), zeros(num_spat_freqs,1), style{1} );   figure(FPpvF)   errorbar(xax, FP_pv_m(j), FP_pv_std(j), style{1} );   figure(instfreqF)   errorbar(xax, instfreq_m(j), instfreq_std(j), style{1} );   figure(SPveliF)   errorbar(xax, SP_veli_m(j), SP_veli_std(j), style{1} );end