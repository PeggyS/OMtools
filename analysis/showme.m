% showme.m:  shows where the eye was at various times before% the saccade fired.  This is a good sanity check...% use "pickdata" and select ONE data record.% written by:  Jonathan Jacobs%              November 1995 - May 1996  (last mod: 05/25/96)% make sure "pickdata" has been used to select EXACTLY one% record to look at.[posRows, posCols] = size(pos);if (posCols ~= 1)    disp( 'You must run "pickdata" and select ONLY ONE' )   disp( 'eye postion record before I can run.' )   returnendp_or_v = input(['Display position (p), velocity (v) '...              'or both (b)? '], 's');p_or_v = lower(p_or_v);t_or_s = input('Plot vs time or sample number (t/s)? ', 's');t_or_s = lower(t_or_s);num_d_pts = length(find(pos < 100000));num_s_pts = length(find(sacv_on_mat < 100000));sacv      = sacv_on_mat(1:num_s_pts);sacp      = sacp_on_mat(1:num_s_pts);sacvon    = sacv_on_mat(1:num_s_pts);sacpon    = sacp_on_mat(1:num_s_pts);sacvoff   = sacv_off_mat(1:num_s_pts);sacpoff   = sacp_off_mat(1:num_s_pts);showme_fig = figure;axes( 'pos', [ .1 .175 .85 .75]) % so graph doesn't bonk into GUI% create the axes now (rather than in DRAWME) so we can get their handlesif p_or_v == 'b'   pos_plot = subplot(2,1,1);   vel_plot = subplot(2,1,2); else   subplot(1,1,1)end% 2nd subplot will be ax(1), 1st subplot will be ax(2) (not that it matters)kiddies = get(gcf, 'Children');ax=[]; count = 1;for k = 1:length(kiddies)   if strcmp( get(kiddies(k), 'Type'), 'axes')      ax(k) = kiddies(k);      k = k + 1;   endend      xlo = 1;xhi = num_d_pts;%xhi = posRows;offset = fix(40*samp_freq/1000);  % ~40ms% set up buttons% 'time before saccade' text-entry boxhOffset = uicontrol( 'Style','edit','Units','normal',...    'ForeGroundColor', 'white',...    'BackGroundColor', 'magenta',...    'Position',[0.01 0.0 0.075 0.05],...    'String',num2str(offset/samp_freq*1000),'UserData',gca,...    'Callback',[ '',...          'time = str2num(get(hOffset, ''str''));',...          'offset = fix((time*samp_freq)/1000);',...          'set(hOffset,''str'', num2str((offset/samp_freq)*1000));',...	  'drawme;',...          'xhi = str2num(get(hXHi, ''str''));',...          'xlo = str2num(get(hXLo, ''str''));',...          'set(ax(1),''xlim'', [xlo xhi]);',...          'if length(ax)==2,',...             'set(ax(2),''xlim'', [xlo xhi]);',...          'end;' ]);% move one time step closer to the saccadehForward = uicontrol( 'Style','Pushbutton','Units','normal',...    'Position',[0.125 0.0 0.075 0.05],...    'String','Fwd','UserData',gca,...    'Callback',[ '',...       	  'offset = offset - 1;',...          'set(hOffset,''str'', num2str((offset/samp_freq)*1000));',...       	  'drawme;',...          'xhi = str2num(get(hXHi, ''str''));',...          'xlo = str2num(get(hXLo, ''str''));',...          'set(ax(1),''xlim'', [xlo xhi]);',...          'if length(ax)==2,',...             'set(ax(2),''xlim'', [xlo xhi]);',...          'end;' ]);% move one time step further from the saccadehBack = uicontrol( 'Style','Pushbutton','Units','normal',...    'Position',[0.2 0.0 0.075 0.05],...    'String','Back','UserData',gca,...    'Callback',[ '',...          'offset = offset + 1;',...          'set(hOffset,''str'', num2str((offset/samp_freq)*1000));',...       	  'drawme;',...          'xhi = str2num(get(hXHi, ''str''));',...          'xlo = str2num(get(hXLo, ''str''));',...          'set(ax(1),''xlim'', [xlo xhi]);',...          'if length(ax)==2,',...             'set(ax(2),''xlim'', [xlo xhi]);',...          'end;' ]);hExport = uicontrol( 'Style','Pushbutton','Units','normal',...    'Position',[0.29 0.0 0.08 0.05],...    'String','Export','UserData',gca,...    'Callback',[ 'expdir;',...       'if (lower(p_or_v) == ''p'') | (lower(p_or_v) == ''b''),',...           'include_p = find( (sacp-offset >= xlo)&(sacp-offset <= xhi) );',...           'p_index = sacp(include_p)-offset;',...           'posit = pos(xlo:xhi);',...           'sacpPts = pos(p_index);',...           'pval_t  = [''p_val'' num2str(round(when)) ''.txt''];',...           'pind_t  = [''p_ind'' num2str(round(when)) ''.txt''];',...           'posit_t = [''posit'' num2str(round(when)) ''.txt''];',...           'eval([''save '' pind_t ''  p_index /ascii'']);',...           'eval([''save '' pval_t ''  sacpPts /ascii'']);',...           'eval([''save '' posit_t '' posit /ascii'']);',...        'end;',...        'if (lower(p_or_v) == ''v'') | (lower(p_or_v) == ''b''),',...           'include_v = find( (sacv-offset >= xlo)&(sacv-offset <= xhi) );',...           'v_index = sacv(include_v)-offset;',...           'veloc = vel(xlo:xhi);',...           'sacvPts = vel(v_index);',...           'vval_t  = [''v_val'' num2str(round(when)) ''.txt''];',...           'vind_t  = [''v_ind'' num2str(round(when)) ''.txt''];',...           'veloc_t = [''veloc'' num2str(round(when)) ''.txt''];',...           'eval([''save '' vind_t ''  v_index /ascii'']);',...           'eval([''save '' vval_t ''  sacvPts /ascii'']);',...           'eval([''save '' veloc_t '' veloc /ascii'']);',...       'end;']);% x axis upper limithXHi = uicontrol( 'Style','edit','Units','normal',...    'ForeGroundColor', 'white',...    'BackGroundColor', 'magenta',...    'Position',[0.82 0.0 0.075 0.05],...    'String',num2str(xhi),'UserData',gca,...    'Callback',[ 'xlo = str2num(get(hXLo, ''str''));',...                 'xhi = str2num(get(hXHi, ''str''));',...                 'set(ax(1),''xlim'', [xlo xhi]);',...                 'if length(ax)==2,',...                    'set(ax(2),''xlim'', [xlo xhi]);',...                 'end;' ]);% x axis lower limithXLo = uicontrol( 'Style','edit','Units','normal',...    'ForeGroundColor', 'white',...    'BackGroundColor', 'magenta',...    'Position',[0.74 0.0 0.075 0.05],...    'String', num2str(xlo),'UserData',gca,...    'Callback',[ 'xlo = str2num(get(hXLo, ''str''));',...                 'xhi = str2num(get(hXHi, ''str''));',...                 'set(ax(1),''xlim'', [xlo xhi]);',...                 'if length(ax)==2,',...                    'set(ax(2),''xlim'', [xlo xhi]);',...                 'end;' ]);% 'draw foveal radius' checkbox.  initially offhBox =uicontrol('Style','CheckBox','Units','normal',...    'ForeGroundColor','black',...    'Position',[0.4 0.0 0.22 0.05],...    'String','Draw fov/slip rad.',...    'Value', 0 );% 'X axis lims' labeluicontrol( 'Style','text','Units','normal',...    'Position',[0.64 0.0 0.09 0.05],...    'String','X axis:','UserData',gca)% quit & clean uphQuit = uicontrol( 'Style','Pushbutton','Units','normal',...    'Position',[0.9 0.0 0.075 0.05],...    'String','Quit','UserData',gca,...    'Callback',[ 'global offset samp_freq;',...       	  'close( showme_fig );',...          'clear when sacv sacp p_or_v posRows hForward x_vect;',...          'clear sacvon sacpon sacvoff sacpoff;',...          'clear hBack hQuit posCols showme_fig t_or_s;',...          'clear hXLo hXHi xlo xhi hOffset time ax;',...          'clear vval_t pval_t pind_t vind_t posit veloc;',...          'clear sacpPts sacvPts p_index v_index include_p include_v;',...          'clear posit_t veloc_t num_d_pts num_s_pts;' ]);% let's get the ball rolling.  (Have to do the 'drawme' AFTER% setting up the buttons because the 'drawme' command checks the % state of the 'draw foveal radius' button.) drawme         % do the plot for this offsetset(ax(1), 'XLim', [xlo xhi]);if length(ax) == 2   set(ax(2), 'XLim', [xlo xhi]);end