% velplot.m:  plot the velocity effects of the braking saccades% written by:  Jonathan Jacobs%              November 1995 - April 1996  (last mod: 04/30/96)% we will go through the control point lists, a column at% a time, extracting the real points from the NaNs. % The stripped column is then used to index into the proper% column of the position data array.  The points are concatenated% into vectors (love that transpose operator) and displayed.%clear sac_dist pre_sac_vel init_sac_vel post_sac_vel %clear vel_diff pcnt_diff pre_sign post_sign%clear all_sacv_on_pts  all_sacp_on_pts %clear all_sacv_off_pts all_sacp_off_pts sac_dist=[];         pre_sac_vel=[];init_sac_vel=[];     post_sac_vel=[]; vel_diff=[];         pcnt_diff=[];pre_sign=[];         post_sign=[];all_sacv_on_pts=[];  all_sacp_on_pts=[]; all_sacv_off_pts=[]; all_sacp_off_pts=[]; TAB = 9;if ~exist( 'sacp_on_mat')   disp( 'You need to run "pickdata" first.' )   returnend[nRows, nCols] = size( sacv_on_mat );for z = 1:nCols   % whack out the 'NaNs'   num_pts = length( find( sacv_on_mat(:,z) < 100000 ) );   num_pts_list(z) = num_pts;   % concatenate the lists of saccade control points   this_sacv_on     = sacv_on_mat( 1:num_pts,z );   all_sacv_on_pts  = [all_sacv_on_pts' this_sacv_on']';   this_sacp_on     = sacp_on_mat( 1:num_pts,z );   all_sacp_on_pts  = [all_sacp_on_pts; this_sacp_on];   this_sacv_off    = sacv_off_mat( 1:num_pts,z );   all_sacv_off_pts = [all_sacv_off_pts; this_sacv_off];   this_sacp_off    = sacp_off_mat( 1:num_pts,z );   all_sacp_off_pts = [all_sacp_off_pts; this_sacp_off];   % calculate and concatenate the lists of saccade stuff.   % Use the 'sacp' points for determining positional   % differences of saccades, and 'sac' pts for vel/acc.   this_sac_dist      = abs(pos(this_sacp_off,z) - pos(this_sacp_on,z));   this_pre_sac_vel   = vel(this_sacv_on-1,z);  % vel just before the saccade   this_init_sac_vel  = vel(this_sacv_on,z);    % init vel of the saccade   this_final_sac_vel = vel(this_sacv_off,z);   % final vel of the saccade   this_post_sac_vel  = vel(this_sacv_off+1,z); % vel just after the saccade   pre_sign  = sign(this_pre_sac_vel);   post_sign = sign(this_post_sac_vel);   did_cross = find( (pre_sign .* post_sign) == -1 );   no_cross  = find( (pre_sign .* post_sign) ~= -1 ); % ( == 1 or == 0 )   this_vel_diff = NaN*ones(length(this_sacv_on),1);   % this looks confusing, but it is really pretty simple.  All we are   % doing here is insuring that we get the proper sign whether or not   % the pre- and post-saccadic velocities are of the same sign.   % This is for when we use percentage slowed.   % case when pre- and post- are of the same sign   if length(no_cross)      this_vel_diff(no_cross)  = ( this_post_sac_vel(no_cross)...                                 - this_pre_sac_vel(no_cross) )...                                 .* pre_sign(no_cross);   end      % case when pre- and post- are opposite signs   if length(did_cross)      this_vel_diff(did_cross) = -1 * abs( this_post_sac_vel(did_cross)...                                         - this_pre_sac_vel(did_cross) );   end   this_pcnt_diff  = this_vel_diff ./ this_pre_sac_vel * 100;   sac_dist      = [ sac_dist'      this_sac_dist' ]';   pre_sac_vel   = [ pre_sac_vel'   this_pre_sac_vel' ]';     init_sac_vel  = [ init_sac_vel'  this_init_sac_vel' ]';   final_sac_vel = [ final_sac_vel' this_final_sac_vel' ]';   post_sac_vel  = [ post_sac_vel'  this_post_sac_vel' ]';     vel_diff      = [ vel_diff'      this_vel_diff' ]';   pcnt_diff     = [ pcnt_diff'     this_pcnt_diff' ]'; end %for z% useful? statisticstotal_num    = length(vel_diff);slowed       = find(vel_diff < -1);   % _which_ points slowed downnum_slowed   = length(slowed);pct_slowed   = num_slowed/total_num;avg_slowdown = mean( abs(pcnt_diff(slowed)) );max_slowdown = max( abs(pcnt_diff(slowed)) );% we're hoping that these values will be zero... sped_up      = find(vel_diff > 1);   % _which_ points sped upnum_sped_up  = length(sped_up);pct_sped_up  = num_sped_up/total_num;% we'd like this number to be very small, too...no_change     = find( -1<vel_diff & vel_diff<1 );  % which points didn't changenum_no_change = length(no_change);pct_no_change = num_no_change/total_num;disp( ['Total number of braking saccades: ' num2str(total_num)] );disp( ['Slowed down: ' num2str(num_slowed) ' -> '...                       num2str(pct_slowed*100) '%'] );disp( ['Sped up:     ' num2str(num_sped_up) ' -> '...                       num2str(pct_sped_up*100) '%'] );disp( ['No change:   ' num2str(num_no_change) ' -> '...                       num2str(pct_no_change*100) '%'] );disp( ' ' )disp( ['Avg slowdown: ' num2str(avg_slowdown) '%'] );disp( ['Max slowdown: ' num2str(max_slowdown) '%'] );% now let's plot velocity differencesfigure('Name','Braking effect distribution','NumberTitle','off');orient landscape[num, width] = size(what_files);fileStr   = [num2str(num) ' files loaded.'];nSacStr   = [num2str(length(vel_diff)) ' saccades.'];subplot(2,1,2)plot( sac_dist, vel_diff, '.')[slope,inter,r_sqr] = regress(sac_dist, vel_diff,0);yfit = slope*sac_dist + inter;hold onplot(sac_dist, yfit, 'c')hold offrtitleStr = ['r^2 = ' num2str(r_sqr)];ylabel('velocity difference (deg/sec)')xlabel('saccade size (deg)')title([nSacStr '  ' rtitleStr])subplot(2,1,1)plot( sac_dist, pcnt_diff, '.')[slope,inter,r_sqr] = regress(sac_dist, pcnt_diff,0);yfit = slope*sac_dist + inter;hold onplot(sac_dist, yfit, 'c')hold offylabel('velocity difference (percent change)')orient landscapertitleStr = ['r^2 = ' num2str(r_sqr)];if length(what_f_names) > 65   title( [fileStr '  ' nSacStr '  ' rtitleStr] ) else   title( [what_f_names '  ' nSacStr '  ' rtitleStr] )end%let's see the distribution as a histogram...figure('Name','Braking effect histogram',...       'NumberTitle','off');orient landscape[v_numb, v_bins] = hist(pcnt_diff(slowed),100);subplot(2,1,2)hist(vel_diff(slowed),100);xlabel('Slowdown (deg/sec)')ylabel('Number slowed')subplot(2,1,1)hist(pcnt_diff(slowed),100);xlabel('Slowdown (percent)')ylabel('Number slowed')orient landscapeif length(what_f_names) > 65   title( [fileStr '  ' nSacStr] ) else   title( [what_f_names '  ' nSacStr] )endfigure('Name','Braking saccade magnitude distribution',...       'NumberTitle','off');orient landscapehist(sac_dist,100);xlabel('Saccade Magnitude (deg)')ylabel('Number of Ocurrences')orient landscapeif length(what_f_names) > 65   title( [fileStr '  ' nSacStr] ) else   title( [what_f_names '  ' nSacStr] )endfigure('Name','Braking saccade magnitude vs pre-sac vel',...       'NumberTitle','off');orient landscapeplot(sac_dist, pre_sac_vel, '.');[slope,inter,r_sqr] = regress(sac_dist, pre_sac_vel,0);yfit = slope*sac_dist + inter;hold onplot(sac_dist, yfit, 'c')hold offrtitleStr = ['r^2 = ' num2str(r_sqr)];xlabel('Saccade Magnitude (deg)')ylabel('Pre-saccadic slow-phase velocity (deg/sec)')orient landscapeif length(what_f_names) > 65   title( [fileStr '  ' nSacStr '  ' rtitleStr] ) else   title( [what_f_names '  ' nSacStr '  ' rtitleStr] )endif ~exist( 'export' ) export = 0; endif export   expdir   v_numb = v_numb';   save v_numb.txt v_numb /ascii   v_bins = v_bins';   save v_bins.txt v_bins /ascii   pcnt_diff = pcnt_diff';   save pcnt_diff.txt pcnt_diff /ascii   vel_diff = vel_diff';   save vel_diff.txt vel_diff /ascii   sac_dist = sac_dist';   save sac_dist.txt sac_dist /ascii   yfit = sac_dist';   save yfit.txt yfit /asciiendif ~exist('debugme') debugme = 0; endif ~debugme   clear nRows nCols num_pts z num width CR TAB LF   clear this_sacv_on this_sacv_off this_sacp_on this_sacp_off   clear this_sac_dist this_pre_sac_vel this_init_sac_vel    clear this_post_sac_vel this_vel_diff this_pcnt_diff    clear all_sacv_on_pts  all_sacp_on_pts    clear all_sacv_off_pts all_sacp_off_pts    clear sac_dist init_sac_vel pre_sac_vel post_sac_vel vel_diff pcnt_diff   clear slowed num_slowed pct_slowed avg_slowdown max_slowdown total_num   clear sped_up num_sped_up pct_sped_up no_change num_no_change pct_no_change   clear v_numb v_bins fileStr nSacStr rtitleStr   clear slope inter r_sqr yfitend