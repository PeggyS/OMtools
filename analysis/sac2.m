% sac2.m:  plot the pos, vel & acc at the saccade's starting point% (3 graphs) versus the magnitude of the saccade.% written by:  Jonathan Jacobs%              November 1995 - April 1996  (last mod: 04/29/96)% we will go through the control point lists, a column at% a time, extracting the real points from the NaNs. % The stripped column is then used to index into the proper% column of the position data array.  The points are concatenated% into vectors (love that transpose operator) and displayed.%clear sac_dist sac_pos sac_vel sac_accsac_dist=[]; sac_pos=[]; sac_vel=[]; sac_acc=[];if ~exist( 'sacp_on_mat')   disp( 'You need to run "pickdata" first.' )   returnendwhen_sec = input( 'How many milliseconds before the saccade?  ' );when = fix( when_sec * samp_freq/1000 );[nRows, nCols] = size( sacv_on_mat );for z = 1:nCols   % whack out the 'NaNs'   num_pts = length( find( sacp_on_mat(:,z) < 100000 ) );   % extract & concatenate the list of 'on' points   this_sacv_on = sacv_on_mat( 1:num_pts,z );   this_sacp_on = sacp_on_mat( 1:num_pts,z );   % extract & concatenate the list of 'off' points   this_sacv_off = sacv_off_mat( 1:num_pts,z );   this_sacp_off = sacp_off_mat( 1:num_pts,z );   % create and concatenate the list of saccade sizes   % and also the same for the pos, vel and acc at time of saccade   this_sac_dist = pos(this_sacp_on,z) - pos(this_sacp_off,z);   this_sac_pos  = pos(this_sacv_on-when,z); % values of the slow phase   this_sac_vel  = vel(this_sacv_on-when,z); % "when_sec" before the   this_sac_acc  = acc(this_sacv_on-when,z); % start of the saccade   sac_dist = [ sac_dist' this_sac_dist' ]';   sac_pos  = [ sac_pos'  this_sac_pos' ]';   sac_vel  = [ sac_vel'  this_sac_vel' ]';   sac_acc  = [ sac_acc'  this_sac_acc' ]';  end% now let's plot these suckers% set graph axis limits% the saccade length limits...x_limh = max( sac_dist ) * 1.25;x_liml = min( sac_dist ) * 0.75;%if x_liml < 0 x_liml = 0; end% the pos, vel & acc limits...y_limh_p = max(sac_pos) * (1 + sign(max(sac_pos))*0.2);  % +/- 20%y_liml_p = min(sac_pos) * (1 + sign(min(sac_pos))*0.2);  % marginsy_limh_v = max(sac_vel) * (1 + sign(max(sac_vel))*0.2);  % for ally_liml_v = min(sac_vel) * (1 + sign(min(sac_vel))*0.2);  % plots.y_limh_a = max(sac_acc) * (1 + sign(max(sac_acc))*0.2);y_liml_a = min(sac_acc) * (1 + sign(min(sac_acc))*0.2);figure('Name','Sac2','NumberTitle','off');%orient landscapesubplot(2,1,1)plot( sac_dist, sac_pos, '.')axis( [x_liml x_limh y_liml_p y_limh_p])if length(what_f_names) > 65   [num, width] = size(what_files);   files_str = [num2str(num) ' files']; else   files_str = what_f_names;endtitle([files_str ' at  -' num2str(when_sec) ' ms'])ylabel('start pos (deg)')subplot(2,1,2)plot( sac_dist, sac_vel, '.')axis( [x_liml x_limh y_liml_v y_limh_v])ylabel('start vel (deg/s)')%subplot(3,1,3)%plot( sac_dist, sac_acc, '.')%axis( [x_liml x_limh y_liml_a y_limh_a])xlabel('saccade size (deg)')%ylabel('start acc (deg/s^2)')if ~exist('debugme') debugme = 0; endif ~debugme   clear nRows nCols num_pts z when when_sec title_str files_str   clear this_sac_dist this_sacp_dist    clear this_sac_pos this_sac_vel this_sac_acc   clear this_sacv_on this_sacv_off this_sacp_on this_sacp_off   clear x_limh x_liml y_limh_p y_liml_p    clear y_limh_v y_liml_v y_limh_a y_liml_a   clear sac_pos sac_vel sac_acc sac_dist sac_lenend