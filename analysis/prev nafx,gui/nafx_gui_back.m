% nafx_gui.m:   % Written by:  Jonathan Jacobs%              December 2001 - March 2007  (last mod: 03/23/07)function nafx_gui()global samp_freq qstrglobal posArrayNAFXH velArrayNAFXH posLimNAFXH velLimNAFXH tauNAFXHglobal numFovNAFXH fovCritNAFXH dblPlotNAFXH fovStatNAFXH nafx2snelH tauVersHnafxFig = findme('NAFXwindow');if nafxFig > 0   figure(nafxFig)   returnendevalin('base', 'global posArrayNAFXH velArrayNAFXH tauNAFXH qstr')evalin('base', 'global posLimNAFXH velLimNAFXH numFovNAFXH')evalin('base', 'global fovCritNAFXH dblPlotNAFXH fovStatNAFXH nafx2snelH tauVersH')if isempty(samp_freq), samp_freq = 500; end   tau = 'empty';qstr = '''';scrsize = get(0,'Screensize');mBarHgt = 35;maxHgt = scrsize(4)-mBarHgt;maxWid = scrsize(3);fig_width = 250;fig_height = 370;% default valuesposArray = '';velArray = '';posLim = '0.5';velLim = '4';fovstat = 0;dblplot = 1;age_range = 1;tau_vers2 = 1;% make sure that 'omprefs' folder exists.  switch to it.gp_err = 0;oldpath = pwd;cd(matlabroot)eval('cd(''omprefs'')','gp_err=1;')if gp_err % must make a omprefs directory   mkdir('omprefs')   cd('omprefs')end% Set the window position.  Check if the window is already open.% If not, then we will first try to read its last saved position from% the pref file.  If not, we will place it at its default position.% Make sure that it will be drawn completely on the screen.% If not, move it so that it will.dErrFlag=0; fErrFlag=0;if ~exist('nafxXPos'), nafxXPos = []; endif ~exist('nafxYPos'), nafxYPos = []; endif isempty(nafxXPos)   if ~dErrFlag      eval(['load nafxprefs.mat'],'fErrFlag=1;');      % make sure that the window will be on the screen!      if nafxXPos<1,nafxXPos=1;end      if nafxYPos<1,nafxYPos=1;end      if (nafxYPos+fig_height)>maxHgt         nafxYPos=maxHgt-fig_height;      end      if (nafxXPos+fig_width)>maxWid         nafxXPos=maxWid-fig_width;      end      end           cd(oldpath) endif dErrFlag | fErrFlag   nafxXPos = 20;   nafxYPos = (maxHgt - fig_height)/2;end%% this is the first step towards eliminating the use of globals.nafxHandList = {qstr posArrayNAFXH velArrayNAFXH posLimNAFXH velLimNAFXH ...          tauNAFXH numFovNAFXH fovCritNAFXH dblPlotNAFXH fovStatNAFXH tauVersH};                                nafxFig = findme('NAFXwindow');if nafxFig < 0   linelist = {0};   nafxFig = figure('pos',[nafxXPos, nafxYPos, fig_width, fig_height],...     'Resize', 'off','Name',['NAFX v2.0b (Mar 2007)'],...     'NumberTitle', 'off','MenuBar', 'none','Color','k',...     'Tag','NAFXwindow',...     'UserData', {nafxHandList,linelist} ); else   figure(nafxFig)endx_orig=8;y_pos=fig_height-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos+4 150 20],...          'HorizontalAlignment','Left',...          'String', ['Calculate using ''zoomtool'':']);nafxprepH = uicontrol('Style','Push','Units','Pixels',...			'Position', [x_orig+155 y_pos+4 65 20],...		    'String','nafxprep', 'Callback',['nafxprep']);y_pos=y_pos-20;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 20],...          'HorizontalAlignment','Left',...          'String', ['Subject age:']);nafx2snelH = uicontrol('Style','popup','Units','pixels',... 			'Position',[x_orig+100 y_pos 135 20],...			'String',['SELECT AGE|Under 6 y.o.|6-12 y.o.|12+ to 40 y.o.|' ...			           '40+ to 60 y.o.|>60 y.o.|Dog (any age)'], ...			'HorizontalAlignment', 'center',...			'Value', age_range);y_pos=y_pos-34;% set up the labelsuicontrol('Style','Frame','Pos',[3 fig_height-270 245 217],...          'BackgroundColor',[0.5 0.5 0.5]);uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Position Array:']);posArrayNAFXH = uicontrol('Style','edit','Units','pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position',[x_orig+100 y_pos 135 25], 'String',posArray);y_pos=y_pos-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Velocity Array:']);velArrayNAFXH = uicontrol('Style','edit','Units','pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position',[x_orig+100 y_pos 135 25], 'String',velArray);y_pos=y_pos-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Position Limit:']);posLimNAFXH = uicontrol('Style','edit','Units','pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position',[x_orig+100 y_pos 135 25], 'String',posLim,... 'Callback',...   ['temp = abs(str2num(get(gco,''string'')));',...	'set(tauNAFXH,''String'',''empty'');',...    'if temp>6,',...    '   set(gco,''string'',''6'');',...    ' else,',...    '   set(gco,''string'',temp);',...        'end;']);%% 09/18/07: added code to set "tau" field to "empty" whenever value is changed %%y_pos=y_pos-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Velocity Limit:']);velLimNAFXH = uicontrol('Style','edit','Units','pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position',[x_orig+100 y_pos 135 25], 'String',velLim,... 'Callback',...   ['temp = abs(str2num(get(gco,''string'')));',...	'set(tauNAFXH,''String'',''empty'');',...    'if temp>12,',...    '   set(gco,''string'',''12'');',...    ' else,',...    '   set(gco,''string'',temp);',...        'end;']);%% 09/18/07: added code to set "tau" field to "empty" whenever value is changed %%y_pos=y_pos-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Sampling Freq.:']);sampFreqH = uicontrol('Style','edit','Units','pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position',[x_orig+100 y_pos 135 25],... 'String', num2str(samp_freq) );y_pos=y_pos-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Foveation Criteria:']);fovCritNAFXH = uicontrol('Style','popup','Units','pixels',... 'Position',[x_orig+100 y_pos-2 135 25],... 'String','Position & Velocity|Position Only|Velocity Only',... 'Value',1, 'UserData',['showpv';'showp ';'showv '] );y_pos=y_pos-30;uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 95 25],...          'HorizontalAlignment','Left',...          'String', ['Tau:']);tauNAFXH = uicontrol('Style','edit','Units','pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position',[x_orig+100 y_pos 135 25],... 'String',num2str(tau) );y_pos=y_pos-38;uicontrol('Style','Frame','Pos',[3 y_pos-3 245 31],...          'BackgroundColor',[0.5 0.5 0.5]);uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[x_orig y_pos 80 23],...          'HorizontalAlignment','Left',...          'String', '# of Foveations:' );numFovNAFXH = uicontrol('Style','edit','Units','Pixels',... 'BackgroundColor','magenta','ForeGroundColor','white',... 'Position', [90 y_pos 65 25],... 'String','empty');fovCalcH = uicontrol('Style','Push','Units','Pixels',... 'Position', [160 y_pos 75 25],... 'String','Calculate',... 'Callback',...   ['funcNAFX  = get(fovCritNAFXH,''UserData'');',...    'valNAFX   = get(fovCritNAFXH,''value'');',...    'funcNAFX  = [deblank(funcNAFX(valNAFX,:)) ''gui''];',...    'posArray  = get(posArrayNAFXH,''string'');',...    'velArray  = get(velArrayNAFXH,''string'');',...    'posLim    = str2num(get(posLimNAFXH,''string''));',...    'velLim    = str2num(get(velLimNAFXH,''string''));',...    'tau       = str2num(get(   tauNAFXH,''string''));',...    'dblplot   = get(dblPlotNAFXH,''value'');',...    'fovstat   = get(fovStatNAFXH,''value'');',...    'tau_vers2 = get(tauVersH,''value'');',...    'age_range = get(nafx2snelH,''value'');',...    'dstr=[''nafx('' posArray '','' velArray '','' num2str(samp_freq) ];',...    'dstr=[dstr '',['' num2str(posLim) '','' num2str(velLim) ''],'' ];',...    'dstr=[dstr qstr funcNAFX(1:end-3) qstr '','' num2str(dblplot) '');''];',...    'disp('' ''),',...    'disp(dstr),',...    'nafx(eval(posArray),eval(velArray),samp_freq,[posLim,velLim], ' ...                   'funcNAFX,dblplot,tau_vers2);',...   ]);y_pos=y_pos-2;y_pos=y_pos-30;uicontrol('Style','Frame','Pos',[3 y_pos-3 245 31],...          'BackgroundColor',[0.5 0.5 0.5]);dblPlotNAFXH = uicontrol('Style','checkbox','Units','pixels',...   'Position',[x_orig y_pos 120 25],...   'FontSize', 9,...   'Value', dblplot, 'String','Plot P&V together?');fovStatNAFXH = uicontrol('Style','checkbox','Units','pixels',...   'Position',[130 y_pos 110 25],...   'FontSize', 9,...   'Value', fovstat, 'String','Show Stats?' );y_pos=y_pos-30;nafxCalcH = uicontrol('Style','Push','Units','Pixels',... 'Position', [x_orig y_pos 85 25],... 'String','Calc NAFX',... 'Callback',...   ['funcNAFX = ''nafxgui'';',...    'posArray = get(posArrayNAFXH,''string'');',...    'velArray = get(velArrayNAFXH,''string'');',...    'posLim   = str2num(get(posLimNAFXH,''string''));',...    'if posLim>6, posLim=6;set(posLimNAFXH,''string'',''6''); end;',...    'velLim   = str2num(get(velLimNAFXH,''string''));',...    'if velLim>10, velLim=6;set(velLimNAFXH,''string'',''10''); end;',...    'numfov   = str2num(get(numFovNAFXH,''string''));',...    'fovstat  = get(fovStatNAFXH,''value'');',...    'tau_vers2 = get(tauVersH,''value'');',...    'age_range = get(nafx2snelH,''value'');',...    'set(fovStatNAFXH,''value'',0);',...    'dstr=[''nafx('' posArray '','' velArray '','' num2str(samp_freq) '',''];',...    'dstr=[dstr num2str(numfov) '','' qstr funcNAFX(1:end-3) qstr '',[0,'' ];',...    'dstr=[dstr num2str(posLim) '','' num2str(velLim) '']);''];',...    'disp(dstr),',...    'nafx(eval(posArray),eval(velArray),samp_freq,numfov, ' ...                     'funcNAFX,[0,posLim,velLim],tau_vers2);',...    'set(fovStatNAFXH,''value'',fovstat);',...   ]);tauVersH = uicontrol('Style','checkbox','Units','Pixels',... 'Foregroundcolor','w',... 'Position', [100 y_pos 65 20],'String','Tau v2', ... 'Value',tau_vers2, 'Callback',['set(tauNAFXH,''String'',''empty'');'] ...   );doneH = uicontrol('Style','Push','Units','Pixels',... 'Position', [175 y_pos 65 25],... 'String','Done',... 'Callback',...   ['nafxtemp=get(gcf,''position'');',...    'nafxXPos = nafxtemp(1);',...    'nafxYPos = nafxtemp(2);',...    'posArray = get(posArrayNAFXH,''string'');',...    'velArray = get(velArrayNAFXH,''string'');',...    'posLim   = str2num(get(posLimNAFXH,''string''));',...    'velLim   = str2num(get(velLimNAFXH,''string''));',...    'numfov   = str2num(get(numFovNAFXH,''string''));',...    'fovstat  = get(fovStatNAFXH,''value'');',...    'tau_vers2 = get(tauVersH,''value'');',...    'age_range = get(nafx2snelH,''value'');',...    'dblplot   = get(dblPlotNAFXH,''value'');',...	'close(gcf);',...    'oldpath=pwd;',...    'cd(matlabroot); cd(''omprefs'');',...    'if exist(''posArray'',''var'') & exist(''velArray'',''var''),',...    'save nafxprefs.mat nafxXPos nafxYPos posArray velArray posLim velLim ' ...                       'dblplot age_range fovstat tau_vers2;',...     'end,',...    'cd(oldpath),',...     'clear global posArrayNAFXH velArrayNAFXH posLimNAFXH velLimNAFXH,',...    'clear global fovCritNAFXH numFovNAFXH dblPlotNAFXH qstr tau_vers2,',...    'clear global fovStatNAFXH tauNAFXH nafx2snelH tauVersH NAFshowOutput,',...    'clear funcNAFX modeNAFX valNAFX nafxXPos nafxYPos dstr qstr tau,',...    'clear age_range numfov oldpath tau_vers2,',...    'clear dblplot fovstat nafxtemp posArray velArray posLim velLim curdir',...   ]);