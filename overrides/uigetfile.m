%UIGETFILE Standard open file dialog box.%   [FILENAME, PATHNAME, FILTERINDEX] = UIGETFILE(FILTERSPEC, TITLE)%   displays a dialog box for the user to fill in, and returns the filename%   and path strings and the index of the selected filter. A successful%   return occurs only if the file exists.  If the user  selects a file%   that does not exist, an error message is displayed,  and control%   returns to the dialog box. The user may then enter  another filename,%   or press the Cancel button.%%   The FILTERSPEC parameter determines the initial display of files in%   the dialog box.  For example '*.m' lists all the MATLAB M-files.  If%   FILTERSPEC is a cell array, the first column is used as the list of%   extensions, and the second column is used as the list of descriptions.%%   When FILTERSPEC is a string or a cell array, "All files" is appended%   to the list.%%   When FILTERSPEC is empty the default list of file types is used.%%   Parameter TITLE is a string containing the title of the dialog box.%%   The output variable FILENAME is a string containing the name of the%   file selected in the dialog box.  If the user presses Cancel, it is set%   to 0.%%   The output variable PATHNAME is a string containing the path of the%   file selected in the dialog box.  If the user presses Cancel, it is set%   to 0.%%   The output variable FILTERINDEX returns the index of the filter%   selected in the dialog box. The indexing starts at 1. If the user%   presses Cancel, it is set to 0.%%   [FILENAME, PATHNAME, FILTERINDEX] = UIGETFILE(FILTERSPEC, TITLE, FILE)%   FILE is a string containing the name to use as the default selection.%%   [FILENAME, PATHNAME] = UIGETFILE(..., 'MultiSelect', SELECTMODE)%   specifies if multiple file selection is enabled for the UIGETFILE%   dialog. Valid values for SELECTMODE are 'on' and 'off'. If the value of%   'MultiSelect' is set to 'on', the dialog box supports multiple file%   selection. 'MultiSelect' is set to 'off' by default.%%   The output variable FILENAME is a cell array of strings if multiple%   filenames are selected. Otherwise, it is a string representing%   the selected filename.%%   Examples:%%   [filename, pathname, filterindex] = uigetfile('*.m', 'Pick an M-file');%%   [filename, pathname, filterindex] = uigetfile( ...%      {'*.m;*.fig;*.mat;*.mdl', 'All MATLAB Files (*.m, *.fig, *.mat, *.mdl)';%       '*.m',  'M-files (*.m)'; ...%       '*.fig','Figures (*.fig)'; ...%       '*.mat','MAT-files (*.mat)'; ...%       '*.mdl','Models (*.mdl)'; ...%       '*.*',  'All Files (*.*)'}, ...%       'Pick a file');%%   [filename, pathname, filterindex] = uigetfile( ...%      {'*.mat','MAT-files (*.mat)'; ...%       '*.mdl','Models (*.mdl)'; ...%       '*.*',  'All Files (*.*)'}, ...%       'Pick a file', 'Untitled.mat');%%   Note, multiple extensions with no descriptions must be separated by semi-%   colons.%%   [filename, pathname] = uigetfile( ...%      {'*.m';'*.mdl';'*.mat';'*.*'}, ...%       'Pick a file');%%   Associating multiple extensions with one description:%%   [filename, pathname] = uigetfile( ...%      {'*.m;*.fig;*.mat;*.mdl', 'All MATLAB Files (*.m, *.fig, *.mat, *.mdl)'; ...%       '*.*',                   'All Files (*.*)'}, ...%       'Pick a file');%%   Enabling multiple file selection in the dialog:%%   [filename, pathname, filterindex] = uigetfile( ...%      {'*.mat','MAT-files (*.mat)'; ...%       '*.mdl','Models (*.mdl)'; ...%       '*.*',  'All Files (*.*)'}, ...%       'Pick a file', ...%       'MultiSelect', 'on');%%   This code checks if the user pressed cancel on the dialog.%%   [filename, pathname] = uigetfile('*.m', 'Pick an M-file');%   if isequal(filename,0) || isequal(pathname,0)%      disp('User pressed cancel')%   else%      disp(['User selected ', fullfile(pathname, filename)])%   end%%%   See also UIGETDIR, UIPUTFILE.%% UIGETFILE -- the sequel!% Replace the standard, highly limited javax.swing.jfilechooser file dialog box with the% much more useful java.awt.FileDialog box.  This is mostly for the benefit of OS X users% because the swing file chooser really is crippled.%% To REALLY get the most out of file dialogs in OS X, buy the excellent enhancement% "Default Folder X" from St. Clair Software.  I have no connection to this product other% than as a very satisfied customer.%% To use this (and UIPUTFILE and UIGETDIR replacements), place it in a folder on your MARLAB% path that loads BEFORE the MATLAB toolboxes.  I suggest creating a directory called % "overrides" (or something similar) and adding it to the top if the PATH list.% Written by:  Jonathan Jacobs%              June - July 2009 (last mod: 07/01/09)function [filename, pathname, filterindex] = uigetfile(varargin)% UIPUTFILE can be called in many different ways.  The first argument can either be% the filterspec or the starting save name.  This is all very confusing.if nargin == 3	filterspec = varargin{1};	db_title = varargin{2}	startname = varargin{3};endif nargin == 2	db_title = varargin{2};endif nargin == 2 | nargin == 1	% decide how to handle the filterspec argument.  If it is a cell array, it will have	% two columns -- the extensions and the descriptions.  If it is a string, then it will	% be either a real filterspec ('*.something') or the name that the file should be saved as.	if isstr(varargin{1})		if findstr(varargin{1},'*')			;		 else		   % also use it as the starting filename		   startname = varargin{1};		end	endend% make sure java classes are loadedimport java.awt.Frame java.awt.FileDialog% If all the input tests above somehow failed, this is the last-ditch effort to% set default arguments for the inputsif ~exist('db_title'),   db_title = 'Select a file:'; endif ~exist('startfile'),  startfile = '';  endif ~exist('filterspec'), filterspec = ''; end% create the dialog windowfd = FileDialog(Frame, db_title, FileDialog.LOAD);% display the window%%%% fd.setFilenameFilter(filterspec)fd.show% get the selected path and filepathname = char(fd.getDirectory);filename = char(fd.getFile);filterindex = 1;if isempty(filename)	filename=0;	filterindex=0;end