enum.startIndex = 1; % 1 samp after exceed thresh? 
enum.endIndex = 2;  % return to baseline
enum.duration = 3;  % in millisec

enum.amplitude = 4;  % mean of R+L?
enum.leftAmplitude = 5;
enum.rightAmplitude = 6;

enum.displacement = 7; % can be eq to ampl. (or not) 
enum.leftDisplacement = 8;
enum.rightDisplacement = 9;

enum.peakVelocity = 10; 
enum.leftPeakVelocity = 11;
enum.rightPeakVelocity = 12;

enum.peakVelocityIdx = 13;  %% t = startInd + PV_ind
enum.leftPeakVelocityIdx = 14;
enum.rightPeakVelocityIdx = 15;

enum.meanVelocity = 16;   
enum.leftMeanVelocity = 17;
enum.rightMeanVelocity = 18;

enum.peakAcceleration = 19;
enum.leftPeakAcceleration = 20;
enum.rightPeakAcceleration = 21;

enum.peakAccelerationIdx = 22; %% t = startInd + PA_ind
enum.leftPeakAccelerationIdx = 23;
enum.rightPeakAccelerationIdx = 24;

enum.peakAccelerationStart = 25;
enum.leftPeakAccelerationStart = 26;
enum.rightPeakAccelerationStart = 27;

enum.peakAccelerationStartIdx = 28; %% t = startInd + PAS_ind
enum.leftPeakAccelerationStartIdx = 29;
enum.rightPeakAccelerationStartIdx = 30;

enum.peakAccelerationBrake = 31;
enum.leftPeakAccelerationBrake = 32;
enum.rightPeakAccelerationBrake = 33;

enum.peakAccelerationBrakeIdx = 34;  %% identical values
enum.leftPeakAccelerationBrakeIdx = 35; %% ''  ''
enum.rightPeakAccelerationBrakeIdx = 36; %% '' ''

enum.direction = 37;       % in degrees(?)
enum.leftDirection = 38;
enum.rightDirection = 39;

enum.preISI = 40;  %% preISI(2:end)
enum.postISI = 41; %%  == postISI(1:end-1)