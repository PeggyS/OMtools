function [ret,x0,str,ts,xts]=dooftest(t,x,u,flag);%DOOFTEST	is the M-file description of the SIMULINK system named DOOFTEST.%	The block-diagram can be displayed by typing: DOOFTEST.%%	SYS=DOOFTEST(T,X,U,FLAG) returns depending on FLAG certain%	system values given time point, T, current state vector, X,%	and input vector, U.%	FLAG is used to indicate the type of output to be returned in SYS.%%	Setting FLAG=1 causes DOOFTEST to return state derivatives, FLAG=2%	discrete states, FLAG=3 system outputs and FLAG=4 next sample%	time. For more information and other options see SFUNC.%%	Calling DOOFTEST with a FLAG of zero:%	[SIZES]=DOOFTEST([],[],[],0),  returns a vector, SIZES, which%	contains the sizes of the state vector and other parameters.%		SIZES(1) number of states%		SIZES(2) number of discrete states%		SIZES(3) number of outputs%		SIZES(4) number of inputs%		SIZES(5) number of roots (currently unsupported)%		SIZES(6) direct feedthrough flag%		SIZES(7) number of sample times%%	For the definition of other parameters in SIZES, see SFUNC.%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.% Note: This M-file is only used for saving graphical information;%       after the model is loaded into memory an internal model%       representation is used.% the system will take on the name of this mfile:sys = mfilename;new_system(sys)simver(1.3)if (0 == (nargin + nargout))     set_param(sys,'Location',[93,149,593,449])     open_system(sys)end;set_param(sys,'algorithm',     'RK-45')set_param(sys,'Start time',    '0.001')set_param(sys,'Stop time',     '0.001')set_param(sys,'Min step size', '0.001')set_param(sys,'Max step size', '0.005')set_param(sys,'Relative error','1e-3')set_param(sys,'Return vars',   '')add_block('built-in/Mux',[sys,'/','Mux'])set_param([sys,'/','Mux'],...		'inputs','2',...		'position',[155,116,185,149])add_block('built-in/Constant',[sys,'/','Constant1'])set_param([sys,'/','Constant1'],...		'Value','3',...		'position',[45,175,65,195])add_block('built-in/Constant',[sys,'/','Constant'])set_param([sys,'/','Constant'],...		'position',[45,115,65,135])add_block('built-in/MATLAB Fcn',[sys,'/','MATLAB Fcn'])set_param([sys,'/','MATLAB Fcn'],...		'MATLAB Fcn','doofy',...		'Output Width','2',...		'Mask Display','doofy',...		'position',[225,118,285,152])add_block('built-in/To Workspace',[sys,'/','To Workspace2'])set_param([sys,'/','To Workspace2'],...		'mat-name','asdf',...		'position',[340,242,390,258])add_block('built-in/To Workspace',[sys,'/','To Workspace1'])set_param([sys,'/','To Workspace1'],...		'mat-name','y2out',...		'position',[415,167,465,183])add_block('built-in/To Workspace',[sys,'/','To Workspace'])set_param([sys,'/','To Workspace'],...		'mat-name','y1out',...		'position',[415,117,465,133])add_block('built-in/Demux',[sys,'/','Demux'])set_param([sys,'/','Demux'],...		'outputs','2',...		'position',[335,117,385,148])add_line(sys,[70,125;150,125])add_line(sys,[70,185;105,185;105,140;150,140])add_line(sys,[190,135;220,135])add_line(sys,[290,135;300,135;300,250;335,250])add_line(sys,[390,125;410,125])add_line(sys,[390,140;390,175;410,175])add_line(sys,[300,135;330,135])drawnow% Return any arguments.if (nargin | nargout)	% Must use feval here to access system in memory	if (nargin > 3)		if (flag == 0)			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])		else			eval(['ret =', sys,'(t,x,u,flag);'])		end	else		[ret,x0,str,ts,xts] = feval(sys);	endelse	drawnow % Flash up the model and execute load callbackend