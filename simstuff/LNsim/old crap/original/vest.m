function [ret,x0,str,ts,xts]=vest(t,x,u,flag);%VEST	is the M-file description of the SIMULINK system named VEST.%	The block-diagram can be displayed by typing: VEST.%%	SYS=VEST(T,X,U,FLAG) returns depending on FLAG certain%	system values given time point, T, current state vector, X,%	and input vector, U.%	FLAG is used to indicate the type of output to be returned in SYS.%%	Setting FLAG=1 causes VEST to return state derivatives, FLAG=2%	discrete states, FLAG=3 system outputs and FLAG=4 next sample%	time. For more information and other options see SFUNC.%%	Calling VEST with a FLAG of zero:%	[SIZES]=VEST([],[],[],0),  returns a vector, SIZES, which%	contains the sizes of the state vector and other parameters.%		SIZES(1) number of states%		SIZES(2) number of discrete states%		SIZES(3) number of outputs%		SIZES(4) number of inputs%		SIZES(5) number of roots (currently unsupported)%		SIZES(6) direct feedthrough flag%		SIZES(7) number of sample times%%	For the definition of other parameters in SIZES, see SFUNC.%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.% Note: This M-file is only used for saving graphical information;%       after the model is loaded into memory an internal model%       representation is used.% the system will take on the name of this mfile:sys = mfilename;new_system(sys)simver(1.3)if (0 == (nargin + nargout))     set_param(sys,'Location',[2,40,626,466])     open_system(sys)end;set_param(sys,'algorithm',     'RK-45')set_param(sys,'Start time',    '0.0')set_param(sys,'Stop time',     '999999')set_param(sys,'Min step size', '0.0001')set_param(sys,'Max step size', '10')set_param(sys,'Relative error','1e-3')set_param(sys,'Return vars',   '')add_block('built-in/Sum',[sys,'/','Sum1'])set_param([sys,'/','Sum1'],...		'position',[600,105,620,125])add_block('built-in/Gain',[sys,'/','Te'])set_param([sys,'/','Te'],...		'Gain','0.2',...		'position',[525,47,550,73])add_block('built-in/Sum',[sys,'/','Sum4'])set_param([sys,'/','Sum4'],...		'position',[445,105,465,125])add_block('built-in/Look Up Table',[sys,'/',['Coulombic',13,'Friction']])set_param([sys,'/',['Coulombic',13,'Friction']],...		'orientation',3,...		'Input_Values','[-1,0,0,1]',...		'Output_Values','[-gain-ini -ini ini gain+ini]')set_param([sys,'/',['Coulombic',13,'Friction']],...		'Mask Display','plot([-1 0 0 1],[-gain-ini, -ini, ini, gain+ini],[-1 1],[0 0],[0 0],[-x,x])',...		'Mask Type','Coulombic Friction')set_param([sys,'/',['Coulombic',13,'Friction']],...		'Mask Dialogue','Coulombic Friction\ny = sign(x) * (Gain * abs(x) + Offset)|Offset discontinuity at zero:|Gain:',...		'Mask Translate','ini=@1;gain=@2;x=max(ini,gain+ini);')set_param([sys,'/',['Coulombic',13,'Friction']],...		'Mask Help','This block has a discontinuity\nat zero and a linear gain afterward.\ny= sign(x)*(Gain*abs(x)+Offset)',...		'Mask Entries','1\/1\/',...		'position',[400,215,430,245])add_block('built-in/Logical Operator',[sys,'/',['Logical',13,'Operator']])set_param([sys,'/',['Logical',13,'Operator']],...		'Operator','OR',...		'position',[290,198,320,222])add_block('built-in/Switch',[sys,'/','Switch'])set_param([sys,'/','Switch'],...		'orientation',3,...		'position',[400,280,430,310])add_block('built-in/Sum',[sys,'/','Sum2'])set_param([sys,'/','Sum2'],...		'position',[365,445,385,465])add_block('built-in/Sum',[sys,'/','Sum'])set_param([sys,'/','Sum'],...		'orientation',3,...		'inputs','+++',...		'position',[407,420,443,440])add_block('built-in/Switch',[sys,'/','Switch1'])set_param([sys,'/','Switch1'],...		'position',[370,94,400,126])add_block('built-in/Gain',[sys,'/','gain'])set_param([sys,'/','gain'],...		'Gain','-0.9',...		'position',[210,112,235,138])add_block('built-in/Constant',[sys,'/','Constant1'])set_param([sys,'/','Constant1'],...		'Value','0',...		'position',[295,130,315,150])add_block('built-in/Constant',[sys,'/','Constant'])set_param([sys,'/','Constant'],...		'orientation',2,...		'Value','0',...		'position',[485,330,505,350])add_block('built-in/Integrator',[sys,'/','Integrator'])set_param([sys,'/','Integrator'],...		'position',[525,125,545,145])%     Subsystem  ['Band-Limited',13,'White Noise'].new_system([sys,'/',['Band-Limited',13,'White Noise']])set_param([sys,'/',['Band-Limited',13,'White Noise']],'Location',[54,341,339,470])add_block('built-in/Outport',[sys,'/',['Band-Limited',13,'White Noise/Out_1']])set_param([sys,'/',['Band-Limited',13,'White Noise/Out_1']],...		'position',[230,40,250,60])add_block('built-in/Gain',[sys,'/',['Band-Limited',13,'White Noise/Gain']])set_param([sys,'/',['Band-Limited',13,'White Noise/Gain']],...		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...		'position',[155,31,195,69])add_block('built-in/Zero-Order Hold',[sys,'/',['Band-Limited',13,'White Noise/Zero-Order',13,'Hold']])set_param([sys,'/',['Band-Limited',13,'White Noise/Zero-Order',13,'Hold']],...		'Sample time','Ts',...		'position',[85,34,120,66])add_block('built-in/White Noise',[sys,'/',['Band-Limited',13,'White Noise/White Noise']])set_param([sys,'/',['Band-Limited',13,'White Noise/White Noise']],...		'Seed','seed',...		'position',[25,40,45,60])add_line([sys,'/',['Band-Limited',13,'White Noise']],[50,50;80,50])add_line([sys,'/',['Band-Limited',13,'White Noise']],[200,50;225,50])add_line([sys,'/',['Band-Limited',13,'White Noise']],[125,50;150,50])set_param([sys,'/',['Band-Limited',13,'White Noise']],...		'Mask Display','plot(t(:),r2(:))',...		'Mask Type','Continuous White Noise.')set_param([sys,'/',['Band-Limited',13,'White Noise']],...		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')set_param([sys,'/',['Band-Limited',13,'White Noise']],...		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')set_param([sys,'/',['Band-Limited',13,'White Noise']],...		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')set_param([sys,'/',['Band-Limited',13,'White Noise']],...		'Mask Entries','[0.1]\/0.1\/[23341]\/')%     Finished composite block ['Band-Limited',13,'White Noise'].set_param([sys,'/',['Band-Limited',13,'White Noise']],...		'orientation',3,...		'position',[402,495,448,535])add_block('built-in/Dead Zone',[sys,'/','Dead Zone1'])set_param([sys,'/','Dead Zone1'],...		'orientation',3,...		'position',[245,255,275,285])add_block('built-in/Sum',[sys,'/','Sum5'])set_param([sys,'/','Sum5'],...		'orientation',3,...		'position',[250,300,270,320])add_block('built-in/Saturation',[sys,'/','Saturation2'])set_param([sys,'/','Saturation2'],...		'position',[250,493,280,517])%     Subsystem  ['Band-Limited',13,'White Noise1'].new_system([sys,'/',['Band-Limited',13,'White Noise1']])set_param([sys,'/',['Band-Limited',13,'White Noise1']],'Location',[54,341,339,470])add_block('built-in/Outport',[sys,'/',['Band-Limited',13,'White Noise1/Out_1']])set_param([sys,'/',['Band-Limited',13,'White Noise1/Out_1']],...		'position',[230,40,250,60])add_block('built-in/Gain',[sys,'/',['Band-Limited',13,'White Noise1/Gain']])set_param([sys,'/',['Band-Limited',13,'White Noise1/Gain']],...		'Gain','[sqrt(Cov)]/[sqrt(Ts)]',...		'position',[155,31,195,69])add_block('built-in/Zero-Order Hold',[sys,'/',['Band-Limited',13,'White Noise1/Zero-Order',13,'Hold']])set_param([sys,'/',['Band-Limited',13,'White Noise1/Zero-Order',13,'Hold']],...		'Sample time','Ts',...		'position',[85,34,120,66])add_block('built-in/White Noise',[sys,'/',['Band-Limited',13,'White Noise1/White Noise']])set_param([sys,'/',['Band-Limited',13,'White Noise1/White Noise']],...		'Seed','seed',...		'position',[25,40,45,60])add_line([sys,'/',['Band-Limited',13,'White Noise1']],[50,50;80,50])add_line([sys,'/',['Band-Limited',13,'White Noise1']],[200,50;225,50])add_line([sys,'/',['Band-Limited',13,'White Noise1']],[125,50;150,50])set_param([sys,'/',['Band-Limited',13,'White Noise1']],...		'Mask Display','plot(t(:),r2(:))',...		'Mask Type','Continuous White Noise.')set_param([sys,'/',['Band-Limited',13,'White Noise1']],...		'Mask Dialogue','White noise for continuous (s-domain) systems.\nBand-limited using zero-order-hold.|Noise Power:|Sample Time:|Seed')set_param([sys,'/',['Band-Limited',13,'White Noise1']],...		'Mask Translate','Cov = @1; Ts = @2; seed = @3; r = rand(1,12); r2 = [r(1),r;r,r(12)]; t =[1:13;1:13];')set_param([sys,'/',['Band-Limited',13,'White Noise1']],...		'Mask Help','Implemented using white noise into Zero-Order Hold block. The seed and power can be vectors of the same length to produce a vector of white noise sources. For faster simulation, set sample time to the highest value possible but in accordance with the fastest dynamics of system.')set_param([sys,'/',['Band-Limited',13,'White Noise1']],...		'Mask Entries','[0.1]\/0.1\/[23341]\/')%     Finished composite block ['Band-Limited',13,'White Noise1'].set_param([sys,'/',['Band-Limited',13,'White Noise1']],...		'orientation',2,...		'position',[325,345,375,385])add_block('built-in/Sum',[sys,'/','Sum3'])set_param([sys,'/','Sum3'],...		'orientation',2,...		'position',[275,330,295,350])%     Subsystem  ['Pulse',13,'Generator'].new_system([sys,'/',['Pulse',13,'Generator']])set_param([sys,'/',['Pulse',13,'Generator']],'Location',[158,441,759,682])add_block('built-in/Outport',[sys,'/',['Pulse',13,'Generator/out_1']])set_param([sys,'/',['Pulse',13,'Generator/out_1']],...		'hide name',0,...		'position',[560,105,580,125])add_block('built-in/Gain',[sys,'/',['Pulse',13,'Generator/Gain']])set_param([sys,'/',['Pulse',13,'Generator/Gain']],...		'hide name',0,...		'Gain','ht',...		'position',[510,102,535,128])add_block('built-in/Product',[sys,'/',['Pulse',13,'Generator/Product']])set_param([sys,'/',['Pulse',13,'Generator/Product']],...		'hide name',0,...		'position',[455,105,480,125])add_block('built-in/Logical Operator',[sys,'/',['Pulse',13,'Generator/Logical',13,'Operator1']])set_param([sys,'/',['Pulse',13,'Generator/Logical',13,'Operator1']],...		'Operator','NOT',...		'Number of Input Ports','1',...		'position',[355,38,385,62])add_block('built-in/Logical Operator',[sys,'/',['Pulse',13,'Generator/Logical',13,'Operator']])set_param([sys,'/',['Pulse',13,'Generator/Logical',13,'Operator']],...		'Operator','XOR',...		'position',[285,38,315,62])add_block('built-in/Constant',[sys,'/',['Pulse',13,'Generator/Constant1']])set_param([sys,'/',['Pulse',13,'Generator/Constant1']],...		'Value','stt',...		'position',[295,149,320,171])add_block('built-in/Clock',[sys,'/',['Pulse',13,'Generator/Clock1']])set_param([sys,'/',['Pulse',13,'Generator/Clock1']],...		'hide name',0,...		'position',[295,100,315,120])add_block('built-in/Relational Operator',[sys,'/',['Pulse',13,'Generator/Relational',13,'operator']])set_param([sys,'/',['Pulse',13,'Generator/Relational',13,'operator']],...		'hide name',0,...		'position',[370,102,400,133])add_block('built-in/Sum',[sys,'/',['Pulse',13,'Generator/Sum1']])set_param([sys,'/',['Pulse',13,'Generator/Sum1']],...		'hide name',0,...		'inputs','+-',...		'position',[130,120,150,140])add_block('built-in/Sum',[sys,'/',['Pulse',13,'Generator/Sum']])set_param([sys,'/',['Pulse',13,'Generator/Sum']],...		'hide name',0,...		'inputs','+-',...		'position',[135,35,155,55])add_block('built-in/Constant',[sys,'/',['Pulse',13,'Generator/Constant']])set_param([sys,'/',['Pulse',13,'Generator/Constant']],...		'position',[25,30,45,50])add_block('built-in/Unit Delay',[sys,'/',['Pulse',13,'Generator/Unit Delay']])set_param([sys,'/',['Pulse',13,'Generator/Unit Delay']],...		'orientation',2,...		'Sample time','[Ts,st1]',...		'position',[145,75,195,95])add_block('built-in/Unit Delay',[sys,'/',['Pulse',13,'Generator/Unit Delay1']])set_param([sys,'/',['Pulse',13,'Generator/Unit Delay1']],...		'orientation',2,...		'Sample time','[Ts,st2]',...		'x0','ini',...		'position',[140,165,190,185])add_line([sys,'/',['Pulse',13,'Generator']],[390,50;430,50;430,110;450,110])add_line([sys,'/',['Pulse',13,'Generator']],[320,50;350,50])add_line([sys,'/',['Pulse',13,'Generator']],[325,160;345,160;345,125;365,125])add_line([sys,'/',['Pulse',13,'Generator']],[540,115;555,115])add_line([sys,'/',['Pulse',13,'Generator']],[485,115;505,115])add_line([sys,'/',['Pulse',13,'Generator']],[405,120;450,120])add_line([sys,'/',['Pulse',13,'Generator']],[320,110;365,110])add_line([sys,'/',['Pulse',13,'Generator']],[140,85;105,85;105,50;130,50])add_line([sys,'/',['Pulse',13,'Generator']],[160,45;230,45;230,85;200,85])add_line([sys,'/',['Pulse',13,'Generator']],[50,40;130,40])add_line([sys,'/',['Pulse',13,'Generator']],[155,130;210,130;210,175;195,175])add_line([sys,'/',['Pulse',13,'Generator']],[135,175;100,175;100,135;125,135])add_line([sys,'/',['Pulse',13,'Generator']],[50,40;70,40;70,125;125,125])add_line([sys,'/',['Pulse',13,'Generator']],[160,45;280,45])add_line([sys,'/',['Pulse',13,'Generator']],[155,130;245,130;245,55;280,55])set_param([sys,'/',['Pulse',13,'Generator']],...		'Mask Display','plot(0,0,100,100,[90,75,75,60,60,35,35,20,20,10],[20,20,80,80,20,20,80,80,20,20])',...		'Mask Type','Pulse Generator')set_param([sys,'/',['Pulse',13,'Generator']],...		'Mask Dialogue','Pulse Generator.|Pulse period (secs):|Pulse width:|Pulse height:|Pulse start time:')set_param([sys,'/',['Pulse',13,'Generator']],...		'Mask Translate','Ts=@1; du=@2; ht=@3; stt=@4; ini=ones(length(ht),1); st1=rem(stt,Ts); st2=rem(stt+du,Ts);if(Ts<=1.2*du),ini=zeros(length(ht),1);end;')set_param([sys,'/',['Pulse',13,'Generator']],...		'Mask Help','Pulse generator which ensures pulse\ntransitions are hit. Provides a vector of pulses when the height is entered as a vector.\nUnmask to see how it works.')set_param([sys,'/',['Pulse',13,'Generator']],...		'Mask Entries','3\/1\/1\/0.5\/')%     Finished composite block ['Pulse',13,'Generator'].set_param([sys,'/',['Pulse',13,'Generator']],...		'position',[15,107,50,143])add_block('built-in/Transfer Fcn',[sys,'/','Transfer Fcn2'])set_param([sys,'/','Transfer Fcn2'],...		'Numerator','[5]',...		'Denominator','[1 5]',...		'position',[685,97,720,133])%     Subsystem  'Graph'.new_system([sys,'/','Graph'])set_param([sys,'/','Graph'],'Location',[0,59,274,252])add_block('built-in/Inport',[sys,'/','Graph/x'])set_param([sys,'/','Graph/x'],...		'position',[65,55,85,75])add_block('built-in/S-Function',[sys,'/',['Graph/S-function',13,'M-file which plots',13,'lines',13,'']])set_param([sys,'/',['Graph/S-function',13,'M-file which plots',13,'lines',13,'']],...		'function name','sfuny',...		'parameters','ax, color,dt',...		'position',[130,55,180,75])add_line([sys,'/','Graph'],[90,65;125,65])set_param([sys,'/','Graph'],...		'Mask Display','plot(0,0,100,100,[90,10,10,10,90,90,10],[65,65,90,40,40,90,90],[90,78,69,54,40,31,25,10],[77,60,48,46,56,75,81,84])',...		'Mask Type','Graph scope.')set_param([sys,'/','Graph'],...		'Mask Dialogue','Graph scope using MATLAB graph window.\nEnter plotting ranges and line type.|Time range:|y-min:|y-max:|Line type (rgbw-:*). Seperate each plot by ''/'':')set_param([sys,'/','Graph'],...		'Mask Translate','color = @4; ax = [0, @1, @2, @3]; dt = -1;')set_param([sys,'/','Graph'],...		'Mask Help','This block plots to the MATLAB graph window and can be used as an improved version of the Scope block. Look at the m-file sfuny.m to see how it works. This block can take scalar or vector input signal.')set_param([sys,'/','Graph'],...		'Mask Entries','20\/-1.1\/1.2\/''y-/g--/c-./w:/m*/ro/b+''\/')%     Finished composite block 'Graph'.set_param([sys,'/','Graph'],...		'position',[750,96,780,134])add_block('built-in/Transfer Fcn',[sys,'/','Transfer Fcn'])set_param([sys,'/','Transfer Fcn'],...		'Denominator','[1 0.0825]',...		'position',[95,106,160,144])add_block('built-in/Saturation',[sys,'/','Saturation1'])set_param([sys,'/','Saturation1'],...		'position',[295,423,325,447])add_block('built-in/Transfer Fcn',[sys,'/','Transfer Fcn3'])set_param([sys,'/','Transfer Fcn3'],...		'Denominator','[1 1]',...		'position',[210,417,245,453])add_block('built-in/Note',[sys,'/','.'])set_param([sys,'/','.'],...		'position',[55,30,60,35])add_line(sys,[555,60;575,60;575,110;595,110])add_line(sys,[470,115;480,115;480,60;520,60])add_line(sys,[480,115;480,135;520,135])add_line(sys,[415,210;415,120;440,120])add_line(sys,[405,110;440,110])add_line(sys,[260,250;260,215;285,215])add_line(sys,[55,125;90,125])add_line(sys,[260,295;260,290])add_line(sys,[250,435;290,435])add_line(sys,[330,435;350,435;360,450])add_line(sys,[285,505;350,505;360,460])add_line(sys,[390,455;415,445])add_line(sys,[325,210;360,210;360,325;415,315])add_line(sys,[550,135;575,135;575,120;595,120])add_line(sys,[575,135;575,455;435,445])add_line(sys,[415,275;415,250])add_line(sys,[425,415;425,390;405,390;405,315])add_line(sys,[240,125;245,125;245,100;365,100])add_line(sys,[415,180;260,180;260,205;285,205])add_line(sys,[260,180;260,110;365,110])add_line(sys,[320,140;340,140;340,120;365,120])add_line(sys,[480,340;425,340;425,315])add_line(sys,[425,490;425,445])add_line(sys,[270,340;265,340;265,325])add_line(sys,[405,335;300,335])add_line(sys,[320,365;310,365;300,345])add_line(sys,[725,115;745,115])add_line(sys,[165,125;175,125;175,435;205,435])add_line(sys,[175,125;205,125])add_line(sys,[175,340;255,340;255,325])add_line(sys,[625,115;680,115])add_line(sys,[175,435;175,505;245,505])drawnow% Return any arguments.if (nargin | nargout)	% Must use feval here to access system in memory	if (nargin > 3)		if (flag == 0)			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])		else			eval(['ret =', sys,'(t,x,u,flag);'])		end	else		[ret,x0,str,ts,xts] = feval(sys);	endelse	drawnow % Flash up the model and execute load callbackend